//#region Path
.canvas-edges path {
  &[data-path='dotted'] {
    stroke-dasharray: calc(3px * var(--zoom-multiplier));
  }

  &[data-path='short-dashed'] {
    stroke-dasharray: 9px;
  }

  &[data-path='long-dashed'] {
    stroke-dasharray: 18px;
  }
}
//#endregion

//#region Arrow
.canvas-edges {
  [data-arrow='triangle-outline'], [data-arrow='diamond-outline'], [data-arrow='circle-outline'] {
    polygon {
      fill: var(--canvas-background);
      
      stroke: rgb(var(--canvas-color));
      stroke-width: calc(3px * var(--zoom-multiplier));
    }
  }

  [data-arrow='thin-triangle'] polygon {
    fill: transparent;
    
    stroke: rgb(var(--canvas-color));
    stroke-width: calc(4px * var(--zoom-multiplier));
  }
  
  .canvas-edge-end {
    position: absolute;
    transform-origin: center !important;
    z-index: 10;
    pointer-events: none;
    
    transform: translate(-50%, -50%);
    
    &.from-line-end, &.to-line-end {
      position: absolute;
      transform-origin: center !important;
    }
  }
}
//#endregion

//#region Custom Connection Points
.canvas-node {
  .side-connection-points {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
    
    .connection-point {
      position: absolute;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background-color: rgba(var(--canvas-color), 0.5);
      transform: translate(-50%, -50%);
      pointer-events: none;
      opacity: 0;
      transition: opacity 0.2s ease;
      
      &.active {
        opacity: 1;
      }
    }
  }
  
  &:hover .side-connection-points .connection-point {
    opacity: 0.5;
  }
}
//#endregion

// 添加方向箭头样式
.edge-direction-arrow {
  pointer-events: none;
  user-select: none;
  opacity: 1; // 完全不透明
  stroke-linejoin: round;
  stroke-width: 1px !important; // 确保边框宽度固定
  filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.3));
  
  // 确保颜色正确应用
  &[fill^="var"] {
    &[fill="var(--interactive-accent)"] { fill: var(--interactive-accent); }
    
    // 预设颜色
    &[fill="var(--canvas-color-1)"] { fill: var(--canvas-color-1); }
    &[fill="var(--canvas-color-2)"] { fill: var(--canvas-color-2); }
    &[fill="var(--canvas-color-3)"] { fill: var(--canvas-color-3); }
    &[fill="var(--canvas-color-4)"] { fill: var(--canvas-color-4); }
    &[fill="var(--canvas-color-5)"] { fill: var(--canvas-color-5); }
    &[fill="var(--canvas-color-6)"] { fill: var(--canvas-color-6); }
  }
  
  // 强制应用颜色
  &[data-color-source^="var(--canvas-color-1)"] { fill: var(--canvas-color-1) !important; }
  &[data-color-source^="var(--canvas-color-2)"] { fill: var(--canvas-color-2) !important; }
  &[data-color-source^="var(--canvas-color-3)"] { fill: var(--canvas-color-3) !important; }
  &[data-color-source^="var(--canvas-color-4)"] { fill: var(--canvas-color-4) !important; }
  &[data-color-source^="var(--canvas-color-5)"] { fill: var(--canvas-color-5) !important; }
  &[data-color-source^="var(--canvas-color-6)"] { fill: var(--canvas-color-6) !important; }
  &[data-color-source^="var(--interactive-accent)"] { fill: var(--interactive-accent) !important; }
  
  // 确保十六进制颜色正确应用
  &[data-color-source^="#"] { 
    // 无法直接使用attr()函数，但可以通过内联样式解决
    // 在JS中已经设置了fill属性
  }
}